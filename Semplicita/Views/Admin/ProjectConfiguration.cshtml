@using Semplicita.Models
@using Semplicita.Helpers
@model ProjectConfigViewModel

@{
    ViewBag.Title = "Configure Project Behavior";

    var projectHelper = new ProjectHelper();
    var roleHelper = new UserRolesHelper();
    var roleDisplays = new RoleDisplayDictionary();

}

<div class="jumbotron">
    <h1>Configure Project Behavior</h1>
    <p class="lead">Here you can manipulate the flow of how tickets reach completion within projects.</p>
</div>


@* Projects Summary *@
<div class="row p-3">
    <div class="col-lg-12">
        <div class="card card-default">
            <div class="card-header">
                <h3 class="card-title"><i class="fas fa-table" style="margin-right:10px;"></i><b>Projects</b></h3>

                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse"><i class="fas fa-minus"></i></button>
                </div>
            </div>

            <div class="card-body">
                <table id="projtable" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Date Created</th>
                            <th>Primary Manager</th>
                            <th>Active Workflow</th>
                            <th>Total Tickets</th>
                            <th>Open Tickets</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach( Project p in Model.Projects ) {
                            <tr>
                                <td>@p.Name</td>
                                <td>@p.CreatedAt.ToString("m/d/yyyy")</td>
                                <td>@(p.ProjectManagerId == null ? "None" : Model.Users.FirstOrDefault(u => u.Id == p.ProjectManagerId).FullNameStandard)</td>
                                <td>@(p.ActiveWorkflow == null ? "No" : p.ActiveWorkflow.Name)</td>
                                <td>@p.ChildTickets.Count</td>
                                <td>@p.ChildTickets.Select(t => t.TicketStatus.IsClosed == false).Count()</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<div class="row p-3">
    @* Add/Remove Project Workflow *@
    <div class="col-xl-6">
        <form action="" method="post">
            <div class="card card-default collapsed-card" id="projAssignWorkflowCard">
                <div class="card-header" style="background-color:#F0F0F0">
                    <h3 class="card-title"><i class="fas fa-hands-helping" style="margin-right:10px;"></i><b>Add/Remove Project Workflows</b></h3>

                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse"><i class="fas fa-plus" id="projAssignWorkflowCollapseIcon"></i></button>
                    </div>
                </div>

                <div class="card-body">
                    <p>Workflows help tickets along through projects by giving them triggers to automatic behavior based on certain actions/criteria.</p>
                    <p><small>If you would like to create a new workflow to add to a project, you can click here, and select projects to apply the new workflow to there.</small></p>
                    <hr />
                    @if( ViewBag.ProjWorkflowAssignErrors != null ) {
                        <ul>
                            @foreach( string err in ViewBag.ProjWorkflowAssignErrors ) {
                                <li class="text-danger">@err</li>
                            }
                        </ul>
                    }
                    @if( ViewBag.ProjWorkflowAssignMessages != null ) {
                        <div class="row">
                            <ul>
                                @foreach( string msg in ViewBag.ProjWorkflowAssignMessages ) {
                                    <li class="text-success">@msg</li>
                                }
                            </ul>
                        </div>
                    }

                    <div class="form-group">

                        <div class="row p-3">
                            <div class="col-12">
                                <h4>Step 1: Select Projects</h4>
                                <div class="select2-purple">
                                    <select class="select2" multiple="multiple" data-placeholder="Select or Type Name..." hidden="hidden" data-dropdown-css-class="select2-purple" style="width: 100%; height: 38px;" name="ProjectIds">
                                        @foreach( Project p in Model.Projects.Where(p => p.IsActiveProject == true).ToList() ) {
                                            <option value="@p.Id">@p.Name</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>


                        <div class="row p-3">
                            <div class="col-12">
                                <h4>Step 2: Select Workflow</h4>
                                <div class="select2-purple">
                                    <select class="select2" data-placeholder="Select or Type Workflow..." data-dropdown-css-class="select2-purple" style="width: 100%; height: 38px;" name="Roles">
                                        @foreach( ProjectWorkflow p in Model.Workflows ) {
                                            <option value="@p.Id">@p.Name</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>


                        <div class="row p-3">
                            <div class="col">
                                <h4>Step 3:</h4>
                                <div class="row">
                                    <div class="col-xl-6">
                                        <input type="submit" name="userRoles:Remove" value="Remove Role(s)" class="btn btn-danger btn-block" />
                                    </div>
                                    <div class="col-xl-6">
                                        <input type="submit" name="userRoles:Add" value="Add Role(s)" class="btn btn-success btn-block" />

                                    </div>
                                </div>

                            </div>
                        </div>

                    </div>

                </div>

            </div>
        </form>
    </div>


    @* Add/Remove from Projects *@
    <div class="col-xl-6">
        <form action="" method="post">
            <div class="card card-default collapsed-card" id="userAssignProjectCard">
                <div class="card-header" style="background-color:#F0F0F0">
                    <h3 class="card-title"><i class="fas fa-user-plus" style="margin-right:10px;"></i><b>Add/Remove from Projects</b></h3>

                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse"><i class="fas fa-plus" id="userAssignProjectCardCollapseIcon"></i></button>
                    </div>
                </div>

                <div class="card-body">
                    <p>To add/remove users to/from projects, please enter their full names and the name of projects you wish to add/remove them from.</p>
                    <hr />
                    @if( ViewBag.UserProjectAllocErrors != null ) {
                        <ul>
                            @foreach( string err in ViewBag.UserProjectAllocErrors ) {
                                <li class="text-danger">@err</li>
                            }
                        </ul>
                    }
                    @if( ViewBag.UserProjectAllocMessages != null ) {
                        <ul>
                            @foreach( string msg in ViewBag.UserProjectAllocMessages ) {
                                <li class="text-success">@msg</li>
                            }
                        </ul>
                    }

                    <div class="form-group">

                        <div class="row p-3">
                            <div class="col-12">
                                <h4>Step 1: Select Users</h4>
                                <div class="select2-purple">
                                    <select class="select2" multiple="multiple" data-placeholder="Select or Type Name..." hidden="hidden" data-dropdown-css-class="select2-purple" style="width: 100%;" name="UserIds">
                                        @foreach( ApplicationUser u in Model.Users.OrderBy(u => u.LastName) ) {
                                            <option value="@u.Id">@u.FullNameStandard</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>


                        <div class="row p-3">
                            <div class="col-12">
                                <h4>Step 2: Select Projects</h4>
                                <div class="select2-purple">
                                    <select class="select2" multiple="multiple" data-placeholder="Select or Type Project Name..." hidden="hidden" data-dropdown-css-class="select2-purple" style="width: 100%;" name="ProjectIds">
                                        @foreach( ProjectWorkflow p in Model.Workflows ) {
                                            <option value="@p.Id">@p.Name</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>


                        <div class="card-footer">
                            <div class="row p-3">
                                <div class="col-xl-6">
                                    <input type="submit" name="projectUsers:Remove" value="Remove User(s)" class="btn btn-danger btn-block" />
                                </div>
                                <div class="col-xl-6">
                                    <input type="submit" name="projectUsers:Add" value="Add User(s)" class="btn btn-success btn-block" />

                                </div>
                            </div>
                        </div>

                    </div>

                </div>

            </div>
        </form>
    </div>
</div>

@* Help *@
<div class="row p-3">

    @* About Roles *@
    <div class="col-lg-12">
        <div class="card card-default collapsed-card" id="userAssignRoleCard">
            <div class="card-header" style="background-color:#C8E7FF">
                <h3 class="card-title"><i class="far fa-question-circle" style="margin-right:10px;color:#1B1075"></i><b>Help: About Roles</b> - Restrictions and Abilities</h3>

                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse"><i class="fas fa-plus"></i></button>
                </div>
            </div>

            <div class="card-body">
                <p>
                    Roles are what define a user's level of authority over other users, and can grant/limit access to certain components or abilities. <br />
                    Here they are listed in order of precedence:
                    <ul>
                        <li>
                            <b>Server Administrator:</b>
                            <ul>
                                <li>Allows full access to all user, project, ticket data, ticket types, statuses, and workflows.</li>
                            </ul>
                        </li>
                        <li>
                            <b>Project Administrator:</b>
                            <ul>
                                <li>Allowed to create new projects, or deactivate active projects.</li>
                                <li>Allowed to manipulate user allocations, project settings, &amp; ticket data of projects to which they are assigned to by a Server Administrator.</li>
                                <li>Not allowed to manipulate ticket types, ticket statuses, or workflows.</li>
                            </ul>
                        </li>
                        <li>
                            <b>Super Solver:</b>
                            <ul>
                                <li>Similar to a Solver, Super Solvers are also responsible for resolving tickets.</li>
                                <li>They have the ability to work within <u><i>any</i></u> ticket in projects to which they are assigned.</li>
                                <li>Additionally, they have the ability to re-assign tickets to other solvers regardless of who the ticket is originally assigned to.</li>
                            </ul>
                        </li>
                        <li>
                            <b>Solver:</b>
                            <ul>
                                <li>Solvers are responsible for resolving tickets that they are assigned.</li>
                                <li>Solvers are allowed to view dashboard data about personal performance, but can only work within tickets they are assigned.</li>
                            </ul>
                        </li>
                    </ul>
                </p>

                <p>
                    Some roles are dependent on project assignments in order to be accessable, while others are not. For example, Server Administrators do not <i>need</i> to be assigned to projects,
                    but they are allowed to be even though they already have access to all components of the server. Meanwhile, Project Administrators depend on project assignments in order to be able
                    to manipulate 
                </p>

            </div>

        </div>
    </div>
</div>

@section Scripts {

    @*navbar selection update*@
    <script>
        $("#navAdminFolder").addClass("menu-open");

        $("#navAdmin").addClass("active");
        $("#navAdminFolder").addClass("active");
        $("#navAdmin_Projects").addClass("active");
    </script>


    @*select2 Init*@
    <script>
        $(document).ready(function () {
            //Initialize Select2 Elements
            $('.select2').select2()

            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })

        })
    </script>

    @*DataTable Init*@
    <script>
        $("#projtable").DataTable();
    </script>


    @*if project allocation messages contain values, unhide the project allocation card, and scroll to it*@
    @if( ViewBag.UserProjectAllocMessages != null || ViewBag.UserProjectAllocErrors != null ) {
        <script>
            $("#userAssignProjectCardCollapseIcon").removeClass("fa-plus");
            $("#userAssignProjectCardCollapseIcon").addClass("fa-minus");
            $("#userAssignProjectCard").removeClass("collapsed-card");


            document.getElementById("userAssignProjectCard").scrollIntoView();
        </script>
    }

    @*if user role messages contain values, unhide the project allocation card, and scroll to it*@
    @if( ViewBag.ProjWorkflowAssignErrors != null || ViewBag.ProjWorkflowAssignErrors != null ) {
        <script>
            $("#projAssignWorkflowCardCollapseIcon").removeClass("fa-plus");
            $("#projAssignWorkflowCardCollapseIcon").addClass("fa-minus");
            $("#projAssignWorkflowRoleCard").removeClass("collapsed-card");

            document.getElementById("userAssignRoleCard").scrollIntoView();
        </script>
    }



}