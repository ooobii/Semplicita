@model Semplicita.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    using( Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }) ) {
        @Html.AntiForgeryToken()
        <div id="socialLoginList">
            <p>
                @foreach( AuthenticationDescription p in loginProviders ) {
                    switch( p.AuthenticationType ) {
                        case "Facebook":
                            <button type="submit" class="btn btn-block btn-outline btn-primary" name="provider" value="@p.AuthenticationType" title="Log in with Facebook">
                                Sign in using Facebook
                            </button>
                            break;

                        case "Google":
                            <button type="submit" class="btn btn-block btn-danger" name="provider" value="@p.AuthenticationType" title="Log in with Google">
                                Sign in using Google
                            </button>
                            break;

                        case "Microsoft":
                            <button type="submit" class="btn btn-block btn-info" name="provider" value="@p.AuthenticationType" title="Log in with Microsoft">
                                Sign in using Microsoft
                            </button>
                            break;

                        default:
                            <button type="submit" class="btn btn-block btn-light" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">
                                @p.AuthenticationType
                            </button>
                            break;
                    }
                }
            </p>
        </div>
    }
}