@using Semplicita.Models
@using Semplicita.Helpers
@using Microsoft.AspNet.Identity

@model EditTicketViewModel

@{
    ViewBag.Title = $"Ticket: {Model.CurrentTicket.GetTicketIdentifier()}";
    UserRolesHelper rolesHelper = new UserRolesHelper();
}

<div class="jumbotron jumbotron-skinny bg-gradient-dkpurple">
    <h1>Ticket: '@Model.CurrentTicket.GetTicketIdentifier()'</h1>
    <p class="lead">@Model.CurrentTicket.Title</p>
</div>


<div class="container">
    <div class="row border-bottom">

        <div class="col pb-4">
            <h2 class="ticket-title">@Model.CurrentTicket.Title</h2>
            <p class="mb-0 text-sm">Created at @Model.CurrentTicket.CreatedAt.ToString("M/d/yyyy h:mm tt") by <b>@Model.CurrentTicket.Reporter.FullNameStandard</b></p>
        </div>

    </div>

    <div class="row pt-4">
        <div class="col-xl-8 pr-xl-5 pb-3">

            <div class="row border-bottom">

                <div class="col pb-3">
                    <div class="input-group">
                        <label class="pr-4">Issue type:</label>
                        <div class="card p-3 full-width">
                            <h5>@Model.CurrentTicket.TicketType.Name</h5>
                            <p class="text-sm">@Model.CurrentTicket.TicketType.Description</p>
                        </div>
                    </div>
                    <div class="input-group pt-2">
                        <label for="TicketDescription">Description:</label>
                        <div class="card p-3 full-width">
                            <p>@Model.CurrentTicket.Description</p>
                        </div>
                    </div>
                </div>

            </div>

            <div class="row">
                <div class="col pt-2 mt-2">
                    <div class="card direct-chat direct-chat-purple full-width">

                        <div class="card-header">
                            <h5 class="card-title"><b>Comments</b></h5>

                            <div class="card-tools">
                                <button type="button" class="btn btn-tool" data-toggle="tooltip" title="Contacts" data-widget="chat-pane-toggle">
                                    <i class="fas fa-comments"></i>
                                </button>
                                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </button>
                            </div>
                        </div>
                        <!-- /.card-header -->
                        <div class="card-body">
                            <!-- Conversation -->
                            <div class="direct-chat-messages">
                                @if( Model.CurrentTicket.Comments.Count > 0 ) {
                                    foreach( TicketComment comment in Model.CurrentTicket.Comments.OrderBy(c => c.CreatedAt).ToList() ) {
                                        if( comment.AuthorId == User.Identity.GetUserId() ) {
                                            //this user created the comment; show on right

                                            <!-- Message to the right -->
                                            <div class="direct-chat-msg right pt-1">
                                                <div class="direct-chat-infos clearfix">
                                                    <span class="direct-chat-name float-left">@comment.Author.FullNameStandard @comment.Author.GetRoleBadges(rolesHelper.ListUserRoles(comment.AuthorId))</span>
                                                    <span class="direct-chat-timestamp float-right">@comment.CreatedAt.ToString("d MMM h:mm:ss tt")</span>
                                                </div>
                                                <!-- /.direct-chat-infos -->
                                                <img class="direct-chat-img" src="@comment.Author.AvatarImagePath">
                                                <!-- /.direct-chat-img -->
                                                <div class="direct-chat-text">
                                                    @comment.Body
                                                </div>
                                                <!-- /.direct-chat-text -->
                                            </div>


                                        } else {
                                            //another user created the comment; show on left

                                            <!-- Message. Default to the left -->
                                            <div class="direct-chat-msg">
                                                <div class="direct-chat-infos clearfix">
                                                    <span class="direct-chat-name float-left">
                                                        @comment.Author.FullNameStandard
                                                        @if( Model.CurrentTicket.AssignedSolverId == comment.AuthorId ) {
                                                            <small class="badge badge-primary align-top">Assigned Solver</small>
                                                        }
                                                        @if( Model.ParentProject.ProjectManagerId == comment.AuthorId ) {
                                                            <small class="badge bg-gradient-navy white align-top">'@Model.ParentProject.TicketTag' Project Mgr</small>
                                                        } @comment.Author.GetRoleBadges(rolesHelper.ListUserRoles(comment.AuthorId))
                                                    </span>
                                                    <span class="direct-chat-timestamp float-right">@comment.CreatedAt.ToString("d MMM h:mm:ss tt")</span>
                                                </div>
                                                <img class="direct-chat-img" src="@comment.Author.AvatarImagePath">
                                                <div class="direct-chat-text">
                                                    @comment.Body
                                                </div>
                                                <!-- /.direct-chat-text -->
                                            </div>

                                        }
                                    }
                                } else {
                                    <h6 class="mt-5 mb-5 text-center">No Comments Yet! 📝</h6>
                                }
                            </div>

                            <!-- Authors -->
                            <div class="direct-chat-contacts">
                                <ul class="contacts-list">
                                    @if( Model.CurrentTicket.Comments.Count > 0 ) {
                                        foreach( ApplicationUser user in Model.CurrentTicket.Comments.Select(c => c.Author).Distinct().ToList() ) {
                                            <li>
                                                <a>
                                                    <img class="contacts-list-img mr-3" src="@user.AvatarImagePath">

                                                    <div class="contacts-list-info">
                                                        <span class="contacts-list-name">
                                                            @user.FullNameStandard
                                                            <small class="contacts-list-date float-right">@Model.CurrentTicket.Comments.Where(c => c.AuthorId == user.Id).Select(c => c.CreatedAt).Min().ToString("M/d/yyyy h:mm:ss tt")</small>
                                                        </span>
                                                        <span class="contacts-list-msg">@user.GetRoleBadges(rolesHelper.ListUserRoles(user.Id))</span>
                                                    </div>
                                                    <!-- /.contacts-list-info -->
                                                </a>
                                            </li>
                                        }
                                    } else {
                                        <li>
                                            <h6 class="mt-5 mb-5 text-center">No Authors Yet! 📝</h6>
                                        </li>
                                    }

                                    <!-- End Contact Item -->
                                </ul>
                                <!-- /.contacts-list -->
                            </div>

                        </div>

                        @if( rolesHelper.CanCommentOnTicket(User, Model.CurrentTicket.Id) ) {
                            <div class="card-footer">
                                @using (Html.BeginForm("AddComment", "Tickets", FormMethod.Post)) {
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("TicketId", Model.CurrentTicket.Id)

                                    <div class="input-group">
                                        <input type="text" name="Body" placeholder="Type Message ..." class="form-control">
                                        <span class="input-group-append">
                                            <button type="submit" class="btn btn-success">Add Comment</button>
                                        </span>
                                    </div>

                                }
                            </div>

                        }
                    </div>
                </div>

            </div>

            <div class="row border-bottom">

                <div class="col mt-3 pt-2 pb-2">
                    <div class="card collapsed-card">
                        <div class="card-header">
                            <h5 class="card-title"><b>Ticket Action History</b></h5>

                            <div class="card-tools">
                                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>
                        </div>

                        <div class="card-body">

                            <div class="timeline">
                                @{
                                    DateTime prevDate = Model.CurrentTicket.HistoryEntries.Max(he => he.OccuredAt).Date;
                                }
                                <div class="time-label">
                                    <span class="bg-navy">@prevDate.ToString("MMMM d, yyyy")</span>
                                </div>

                                @foreach( TicketHistoryEntry the in Model.CurrentTicket.HistoryEntries.OrderByDescending(he => he.OccuredAt) ) {
                                    if( prevDate.Date != the.OccuredAt.Date ) {
                                        prevDate = the.OccuredAt.Date;
                                        <div class="time-label">
                                            <span class="bg-navy">@prevDate.ToString("MMMM d, yyyy")</span>
                                        </div>
                                    }



                                    <div>
                                        <div class="timeline-item">
                                            <span class="time"><i class="fas fa-clock"></i> @the.OccuredAt.ToString("hh:mm:ss tt")</span>
                                            <h3 class="timeline-header">@the.GetHistoryTitleHtml()</h3>

                                            <div class="timeline-body">
                                                @the.GetHistoryBodyHtml()
                                            </div>
                                        </div>
                                    </div>
                                }


                            </div>

                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="col-xl-4">
            <div class="row pt-4 pt-xl-0">
                <div class="col">
                    <div class="card collapsed-card">
                        <div class="card-header">
                            <h5 class="card-title"><b>Actions</b></h5>

                            <div class="card-tools">
                                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>
                        </div>
                        <!-- /.card-header -->
                        <div class="card-body p-3">

                            @if( rolesHelper.CanEditTicket(User, Model.CurrentTicket.Id) ) {
                                <div class="row p-1">
                                    <div class="col">
                                        <a href="@Url.Action("Edit", "Tickets", new { TicketIdentifier = Model.CurrentTicket.GetTicketIdentifier() })">
                                            <div class="btn btn-block btn-warning" title="Report New Issue">Edit Ticket</div>
                                        </a>
                                    </div>
                                </div>
                            }
                            @if( rolesHelper.CanArchiveTicket(User, Model.CurrentTicket.Id) ) {
                                <div class="row p-1">
                                    <div class="col">
                                        <a href="@Url.Action("Delete", "Tickets", new { TicketIdentifier = Model.CurrentTicket.GetTicketIdentifier() })">
                                            <div class="btn btn-block btn-danger">Archive Ticket</div>
                                        </a>
                                    </div>
                                </div>
                            }

                        </div>

                    </div>
                </div>
            </div>

            <div class="row pt-4 pt-xl-0">
                <div class="col">
                    <div class="card">
                        <div class="card-header bg-gradient-navy">
                            <h5><i class="fas fa-user-astronaut card-header-icon"></i>Assigned Solver</h5>
                        </div>

                        <div class="card-body">
                            @if( Model.CurrentTicket.AssignedSolverId != null ) {
                                <h5>
                                    @Model.CurrentTicket.AssignedSolver.FullNameStandard
                                    @if( rolesHelper.IsInRole(Model.CurrentTicket.AssignedSolverId, "SuperSolver") ) {
                                        <small class="text-sm badge badge-sm badge-secondary align-top">Super Solver</small>
                                    } else if( rolesHelper.IsInRole(Model.CurrentTicket.AssignedSolverId, "Solver") ) {
                                        <small class="text-sm badge badge-sm badge-success align-top">Solver</small>
                                    }
                                </h5>
                                <small>@Model.CurrentTicket.AssignedSolver.Email</small>
                            } else {
                                <h6 class="no-solver-warning">No Solver Assigned!</h6>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="row pt-4 pt-xl-0">
                <div class="col">
                    <div class="card">
                        <div class="card-header bg-gradient-navy">
                            <h5><i class="fas fa-exclamation-circle card-header-icon"></i>Issue Priority</h5>
                        </div>

                        <div class="card-body">
                            <div class="select2-purple">
                                <h6>@Model.CurrentTicket.TicketPriorityLevel.Name</h6>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row pt-4 pt-xl-0">
                <div class="col">
                    <div class="card">
                        <div class="card-header bg-gradient-navy">
                            <h5><i class="fas fa-tasks card-header-icon"></i>Current Status</h5>
                        </div>

                        <div class="card-body">
                            <h6>@Model.CurrentTicket.TicketStatus.GetStatusBadgeHtml(14)</h6>
                            <p class="text-sm">@Model.CurrentTicket.TicketStatus.Description</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row pt-4 pt-xl-0">
                <div class="col">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title"><b>Attachments</b></h5>

                            <div class="card-tools">
                                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </button>
                            </div>
                        </div>
                        <!-- /.card-header -->
                        <div class="card-body p-0">
                            @if( Model.CurrentTicket.Attachments.Count > 0 ) {
                                <ul class="products-list product-list-in-card pl-2 pr-2">
                                    @foreach( TicketAttachment a in Model.CurrentTicket.Attachments.OrderByDescending(a => a.UploadedAt) ) {
                                        @*<li class="item">
                                                <div class="product-img">
                                                    <img src="~/img/upload.png" alt="File" class="img-size-50">
                                                </div>
                                                <div class="product-info">
                                                    <a target="_blank" href="@Url.Action("GetTicketAttachment", "Tickets", new { TicketIdentifier = Model.CurrentTicket.GetTicketIdentifier(), attachmentId = a.Id })" class="product-title">
                                                        @a.Name
                                                    </a>
                                                    <span class="product-description text-sm">
                                                        Uploaded @a.UploadedAt.ToString("MMMM d, yyyy h:mm:ss tt")
                                                    </span>
                                                    <span class="product-description text-sm">
                                                        by @a.Author.FullNameStandard
                                                    </span>
                                                </div>
                                            </li>*@
                                        @a.GetDisplayHtml();
                                    }
                                </ul>
                            } else {
                                <h6 class="text-center p-4">No attachments added yet! 🤔</h6>
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @* bs-custom-file-input *@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bs-custom-file-input/1.3.4/bs-custom-file-input.min.js"></script>


    @*select2 Init*@
    <script>
        $(document).ready(function () {
            //Initialize Select2 Elements
            $('.select2').select2()

            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })

        })
    </script>

    @* bs-custom-file-input Upload *@
    <script>
        $(document).ready(function () {
            bsCustomFileInput.init();
        });
    </script>

}